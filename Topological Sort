
from collections import defaultdict

class Graph:
    def __init__(self,vertices):
        self.graph = defaultdict(list) 
        self.V = vertices
 
    
    def addEdge(self,u,v):
        self.graph[u].append(v)
    
    

g= Graph(1)
g.addEdge(1, 0);

 
topo_graph=g.graph
print(topo_graph)
stack=[]
visited=set()

def topologicalSort(graph,node,stack,visited):
    
    if node not in visited:
        visited.add(node)
        #print(visited)
        for neighbour in graph[node]:
            topologicalSort(graph, neighbour, stack, visited)
        stack.append(node)
            
    return stack


print(topologicalSort(topo_graph,1,stack,visited))
#[0,2,1,3]
